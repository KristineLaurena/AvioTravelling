@{
    ViewBag.Title = "Worlds Best Air Flight Company";
}
<section class="content-header">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Dashboard</li>
    </ol>
</section>
<section class="content" >

    <div class="row" id="citiesView">
        <div class="col-md-12">
            <button type="button" class="btn btn-primary btn-lg" data-bind="click: NewCountry">
                Add New Country
            </button>
            <button type="button" class="btn btn-primary btn-lg" data-bind="click: deleteCountry">
                Delete Country
            </button>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>&nbsp;</th>
                        <th>Id</th>
                        <th>Name</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: Rows">
                    <tr>
                        <td><div class="checkbox icheck"><input type="checkbox" data-bind="attr: {deleteCheck: Id}"/></div></td>
                        <td data-bind="text: Id">/td>
                        <td><a data-bind="text: !!Name() > 0 ? Name() : 'Edit Country', click: UpdateCity.bind($data, Id) " href="#"></a></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
   
</section>

 <!-- Modal -->
<div class="modal fade" id="modalPlaceholder" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    
</div>

@section Scripts{
    <script type="text/javascript">
        var viewModel = function () {
            self = this;
            var deleteRecord = "deleterecord";

            self.Rows = ko.observableArray();

            self.refresh = function () {
                App.LoadData("@this.GeoApiUrl("Countries")", false, self.ApplyNewData);
            }

            self.navigate = function(elementId){
                App.Navigate("@this.GeoHtmlUrl("EditCity")", { id: elementId() });
            }

            self.UpdateCity = function (elementId) {
                App.OpenModal("@this.GeoHtmlUrl("EditCountry")", $('#modalPlaceholder')[0], { id: elementId });
            };

            self.NewCountry = function () {
                App.OpenModal("@this.GeoHtmlUrl("NewCountry")", $('#modalPlaceholder')[0]);
            }

            self.deleteCountry = function () {
                var Ids = [];
                $.each($('[deletecheck]:checked'), function (idx, elem) {
                    Ids.push($(elem).attr('deletecheck'));
                });
                bootbox.confirm("Are you sure want to delete " + Ids.length + " records?", function(confirmed){
                
                    if(confirmed){
                        
                        App.PostData("@this.GeoApiUrl("DeleteCountry")", { Ids: Ids }, deleteRecord, false);
                    }
                });
            }

            self.ApplyNewData = function (newData) {
                self.Rows.removeAll();

                $.each(newData, function (idx, line) {
                    self.Rows.push(ko.mapping.fromJS(line));
                });
            }

            self.refresh();

            $(document).on("recordUpdated", function () {
                $('#modalPlaceholder').modal('hide');
                $('#modalPlaceholder').html('');

                self.refresh();
            });
        }

        ko.applyBindings(viewModel, $('#citiesView')[0]);
    </script>
}

